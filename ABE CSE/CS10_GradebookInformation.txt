Information is Unique to Alberta Education and Schools in Alberta

CSE1010 - Computer Science 1
  - Algorithms, Block Diagrams
  - No Pre-requisites
CSE1110 - Structured Programming 1
  - IOP, basic operators & data types, sequential flow
  - No Pre-requisites
CSE1120 - Structured Programming 2
  - Intro to modularity, specifically selection and iteration
  - Needs CSE1110: Structured Programming 1
CSE1210 - Client-Side Scripting 1 (Mark-up Languages)
  - No Pre-requisites
CSE1910 - CSE Project A

Purposes: all end in Presentation to Industry and/or Post Secondary
- Build HTML Webpages for Promotion and hosting (GitHub)
- Build simple Android Apps with Java through the Processing IDE
- Option: Using a Raspberry Pi to explore hardware of a computer, Physical Computing

2018-2019 School Year

Main Assignment Titles Per Course, for gradebook listings (Unique to ABE)

General Assignment Titles for Individual Study Projects
- Assignments
- Anecdotal Records, Testing, and Debugging
- Project Planning
- Major Project

CSE1010 - Computer Science 1
- Developer Tools: Using Email, Using GitHub, Using Educational Tools like Google Classroom
- Algorithm Introduction: Case Studies and To Do Lists (ReadMe.md Markdown & Simple HTML)
- Using Algorithms: Data Flowcharts, Pseudocode, Input-Output-Processing
- Software Development: "Iterative and Incremental" (See AP CSP), "Waterfall"
- Essential Algorithms (i.e. like a calculator in the console):
  - Accumulation (running total),
  - Determining a Mean (central tendency, not median, or mode without sorting),
  - Maximums and Minimums
- Using Control Structures: Sequential, Decision, Iterative

CSE1210 - Client-Side Scripting 1 (Mark-up Languages)
- Exploring Internet Architecture
- Developer Tools Integration
  - Using multiple windows
  - Atom
  - Browser and Settings
  - Rendering
  - GitHub Interactions
- Static Webpages: HTML and GitHub Markdown Lessons and Assignments
  - Document Design: hypertext using tags, attributes, and hyperlinks (including downloading documents)
    - Introduction to Navigation Emphasis: 2-clicks, Browser Navigation (In Tab, New Tab)
    - HTML Layout: mark off the various parts of the document
    - Text: display and emphasize in various ways
    - Semantic Tags & HTML Boilerplate
      - Various Formats and Fonts, including sub and superscripts
      - Bold and italics
      - Lists: ordered and unordered
      - Tables
    - Visual Data: variety of formats
      - URL & Data Accessed
      - YouTube Videos and Players-in-Page
      - Images
      - Mapped images
      - GIFs
    - Use style codes inline with HTML
    - Enrichment: java-script writing HTML
- HTML Lessons Website (index to childPages, childPages above)
  - childPage Template
  - MetaData
  - Headings & Paragraph Tags
  - FooterBlockQuote
  - DIVs with head-CSS
  - Images
  - Sub & Super Script Tags
  - Note: other HTML Tags mixed into these child pages (see HTML Summary)
- Who Am I Webpage Project
  (Presenting one's Digital Presence of "Global" Perspective or "UNESCO" Perspective)
  - See Rubric
- Essay Webpage Project (Explore Meta-Literacy of essay (English and Social))
  - See Rubric
- OPTIONAL: Coming Soon Page, "Under Construction", with Webpage Counter

CSE1110 - Structured Programming 1
- Algorithms for GUI (Ratios for Geometry Feedback)
  - Paper Folding
  - Happy Face Case Study with Diagram and coordinates
  - Quit Button Case Study Diagram with coordinates
- HEAP Sheets: Reading and Following of HEAP Sheets, Variables, etc. on a flat level
  - Not included when in CS30
- Documentation & Syntax
  - Internal: comments
  - External: ReadMe.txt, ReadMe.md
	- Enrichment, Promotional: index.html
- Algorithm Translations
  - Primitive Data and Boundaries (Integers, Real Numbers: floats & doubles, Characters, & Strings)
	- Variables and Constants (for Security)
	- Literals & Input Command (methods or operators)
- Debugging & Interpretation (& Change)
  - Syntax Errors: recognize and change
  - Logic Errors: in various places like debugger, console, or canvas
  - Run-time Errors: in console or Rendering errors
- GUI Introductions: 2D Shapes, Layering & Measles
  - Quit Button & Color
  - Happy Face (standard, size(), excellence, fullScreen(), assessment using 
		Display Geometry and formulae)
  - Text
  - Images
- Music Player: Case Study & GUI (Including Free Use Music)

CSE1120 - Structured Programming 2
- Algorithms: Use More than one IPO Module
  - User Input Data (sensor) vs. Computed Data vs. Hard-coded data
	  - For example: input by keyboard, mouse, counters, collisions (visual data)
	- Enrichment: using libraries to simplify coding using prebuilt functions
	- See Music Player (Android)
- Data & Data Structures: see Console Calculator Assignment
  - Use following literals or operators
	  - Assignment (=)
		- Arithmetic (+, -, *, /, %, ++, --, +=, -=, *=, /=, =+, =-, =*, =/)
		- Relational (!, &&, ||, including short circuits)
		- Boolean (true, false, conditionals)
		- Concatenation (two notations: + ,)
		- Interpolation (new interior data points), for example with fractions and checking typeof, casting where appropriate
	- Use Boolean data for decision and iterative control structures
	- Boundaries of Data, including internal markers for outputs or errors
	- Enrichment, Introduce Arrays as Alpha-Numeric Variable Grouping (variables and constants)
	  - Note: using index to match boundaries of data expectations
  - Use Appropriate selection or iteration structures to avoid unconditional branching or exiting
	  - Nested conditional (IF-IF | AND)
		- Nested Iterative (similar to 2D Array, 2D Plane), see Chess Board Assignment
- Algorithm Translation (coding): Music Player Project (working software)
- Summary: Introductory Boilerplate or App Engine as Group of Procedures

CSE1910 - CSE Project A
- Purpose: workflow of project management, individually monitored and communicated prior to building
  - Identify the project
	- Prepare a plan
	- Clarify Purposes
	- Defining deliverables
	- Specifying timelines
	- Explaining terminology, tools, and processes
	- Defining resources, materials, costs
	- Identify assessment standards, attaining metrics
	- Present proposal, obtain necessary approvals
- Student Considerations
  - Complete project and performance as outlined and planned
	- Monitor project and performance, making and recording necessary adjustments
	- Present project and performance, indicating outcomes attained and relationship of outcomes to goals originally set
	- Evaluate project and performance indicating the processes and strategies used
	- Make recommendations on how the project and performance could be improved
Assignment Titles for Gradebook
- Project Planning
- Anecdotal Grading, Testing & Debugging
- Cumulative Grade

Project Listings and Expectations Summary

Music Player
1. Music Player Case Study
  - Image – GUI
  - Descriptions of Functions
2. Music Player GUI
  - Image of Buttons, 2D Shapes
  - Relationship to Functions, Behaviors
3. General Setup, Library Functions: using Sound or Minim (or other sound player)
4. Basic GUI and Function – based on all classroom work to date
  - 2D Shapes
  - Text
  - Images
  - Quit Button
  - Other Buttons
  - Play and Stop 1 song (array not necessary here)
5. Player Functions – using combination of classroom work and example sound & music players coded by Mr. Mercer
  - Note: array necessary hypertext- Loading Multiple Songs
  - Multiple Songs available to be played (additional sound effects for specific buttons are a bonus)
  - Next Button: will work and will not go past the “last song”
  - Previous Button: will work and will not go past the “first song”
  - Handling Errors for playing “next: and “previous” songs
  - For Example: Array Index Out of Bounds
6 Advanced GUI Elements – student choice to go “beyond” general expectations so the music player has individual
  - Emphasizes research of chosen Library functions- Time: what part of the song as played, total the song has to play
  - Volume: changing the volume
  - Song Title: printing the title of the song, dealing with a song title that is too long for the space provided
  - Other items Mr. Mercer has not recorded or prompted

Other Projects
- Celebration Cards
- Screen Savers & emphasis of loops, like infinite loops with single escape ("quit" button)
- Drawing Program
- Security App: combination locks
- Games: Chop Sticks, Rock Paper Scissors, Snake, Tetrus
