Design Thinking: Empathizing, Defining, Ideating, Prototyping, Testing
Computational Thinking: ask and answer questions to solve problems with patterns and counting
Developing systems that make choices based on assumptions

Introductory CS teaches
- how to write a program's GUI to any monitor
- how to take sensor data & visual data and automate programs
- how to own your own data

"How to Develop and App"
- Variables: predefined, calculated, sensor populated, API poplulated, file.txt IO
- Graphical User Interface (GUI): communication with device before program executes
  Delivers geometry
- Counting Patterns and Concepts (how does a Math 10C count?)
  - Forwards
  - Backwards
  - Arithmetic
  - Geometric
  - Squares
  - Combinations (slope, polynomials, etc.)
  - Using time from the Operating System or in Processing-Java (milli-seconds from crystal)
- Start and stop counting (boundaries of variables)
  Evaluating type of number with modulus
  Console output to whether code makes it into IF
- Separating the GUI Space intentionally for feedback
  Nested counting (nested FOR Loops)
- Developing a calculator: bartering for a price
  Understanding a profit-loss graph
  Using formulae to guide responses
- Changing Visual Data based on calculations
- Creating a Drawing Program
- Creating a Music Program
- Creating a Final Project

General Introductory Projects
- Visual Data, Hello World
- Visual Data, Clicking Game with timer
- Algorithms to poplulate variables

"How to code a robot": , planter (3 plants)
- incorporate
- racing a line follower in a track (Sandwich)
  analogue to digital to camera
- planter (with website?)
- Goals or Purpose: map environment for possible choices based on hard coded assumptions

"Device into Data Collection Tool"
- UNDER CONSTRUCTION
